{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Will Magazine API"
  },
  "security": [
    {
      "Bearer Auth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer Auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "bearer",
        "description": "Include this token in the 'Authorization' header"
      }
    },
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/api/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "User Lists",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The user list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "alex@example.com"
                          },
                          "emailVerified": {
                            "type": "boolean",
                            "example": true
                          },
                          "username": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100,
                            "example": "alex_1"
                          },
                          "displayUsername": {
                            "type": "string",
                            "nullable": true,
                            "example": "Alex"
                          },
                          "name": {
                            "type": "string",
                            "example": "Alex"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "USER",
                              "ADMIN",
                              "MODERATOR"
                            ],
                            "example": "USER"
                          },
                          "isActive": {
                            "type": "boolean",
                            "example": true
                          },
                          "image": {
                            "type": "string",
                            "nullable": true,
                            "example": "https://example.com/avatar.png"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2025-08-02T12:34:56.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2025-08-02T12:34:56.000Z"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "emailVerified",
                          "username",
                          "displayUsername",
                          "name",
                          "role",
                          "isActive",
                          "image",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "User Create",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "The User to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "alex@example.com"
                  },
                  "username": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "name": {
                    "type": "string",
                    "example": "Alex"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "USER",
                      "ADMIN",
                      "MODERATOR"
                    ],
                    "example": "USER"
                  },
                  "image": {
                    "type": "string",
                    "nullable": true,
                    "example": "https://example.com/avatar.png"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                },
                "required": [
                  "email",
                  "username",
                  "name",
                  "role",
                  "image",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "alex@example.com"
                    },
                    "emailVerified": {
                      "type": "boolean",
                      "example": true
                    },
                    "username": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "alex_1"
                    },
                    "displayUsername": {
                      "type": "string",
                      "nullable": true,
                      "example": "Alex"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alex"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "USER",
                        "ADMIN",
                        "MODERATOR"
                      ],
                      "example": "USER"
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    },
                    "image": {
                      "type": "string",
                      "nullable": true,
                      "example": "https://example.com/avatar.png"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "emailVerified",
                    "username",
                    "displayUsername",
                    "name",
                    "role",
                    "isActive",
                    "image",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "email"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "username"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "name"
                            ],
                            "message": "Required"
                          },
                          {
                            "expected": "'USER' | 'ADMIN' | 'MODERATOR'",
                            "received": "undefined",
                            "code": "invalid_type",
                            "path": [
                              "role"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "image"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "password"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Get a specific user by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user ID"
            },
            "required": true,
            "description": "The user ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "alex@example.com"
                    },
                    "emailVerified": {
                      "type": "boolean",
                      "example": true
                    },
                    "username": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "alex_1"
                    },
                    "displayUsername": {
                      "type": "string",
                      "nullable": true,
                      "example": "Alex"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alex"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "USER",
                        "ADMIN",
                        "MODERATOR"
                      ],
                      "example": "USER"
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    },
                    "image": {
                      "type": "string",
                      "nullable": true,
                      "example": "https://example.com/avatar.png"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "emailVerified",
                    "username",
                    "displayUsername",
                    "name",
                    "role",
                    "isActive",
                    "image",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Update a specific user by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user ID"
            },
            "required": true,
            "description": "The user ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The user data to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "alex@example.com"
                  },
                  "username": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "name": {
                    "type": "string",
                    "example": "Alex"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "USER",
                      "ADMIN",
                      "MODERATOR"
                    ],
                    "example": "USER"
                  },
                  "image": {
                    "type": "string",
                    "nullable": true,
                    "example": "https://example.com/avatar.png"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "alex@example.com"
                    },
                    "emailVerified": {
                      "type": "boolean",
                      "example": true
                    },
                    "username": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "alex_1"
                    },
                    "displayUsername": {
                      "type": "string",
                      "nullable": true,
                      "example": "Alex"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alex"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "USER",
                        "ADMIN",
                        "MODERATOR"
                      ],
                      "example": "USER"
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    },
                    "image": {
                      "type": "string",
                      "nullable": true,
                      "example": "https://example.com/avatar.png"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "emailVerified",
                    "username",
                    "displayUsername",
                    "name",
                    "role",
                    "isActive",
                    "image",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Insufficient permissions"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "status": {
                      "type": "number",
                      "example": 403
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "description": "Delete a specific user by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user ID"
            },
            "required": true,
            "description": "The user ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Insufficient permissions"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "status": {
                      "type": "number",
                      "example": 403
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Profile",
        "description": "Get a specific user's profile by user ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The user ID"
            },
            "required": true,
            "description": "The user ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The user's profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string",
                      "nullable": true
                    },
                    "avatarUrl": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20,
                      "example": "+1 210 456 2719"
                    },
                    "address": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "Manhattan"
                    },
                    "country": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "United States"
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "nullable": true
                    },
                    "gender": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 50
                    },
                    "hobbiesAndPassions": {
                      "type": "string",
                      "nullable": true
                    },
                    "paidVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "freeVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "lastFreeVoteAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "coverImageId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "bio",
                    "avatarUrl",
                    "phone",
                    "address",
                    "city",
                    "country",
                    "postalCode",
                    "dateOfBirth",
                    "gender",
                    "hobbiesAndPassions",
                    "paidVoterMessage",
                    "freeVoterMessage",
                    "createdAt",
                    "updatedAt",
                    "lastFreeVoteAt",
                    "coverImageId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Profile Lists",
        "description": "Get a list of all profiles",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The profile lists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "bio": {
                            "type": "string",
                            "nullable": true
                          },
                          "avatarUrl": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 255
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 20,
                            "example": "+1 210 456 2719"
                          },
                          "address": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100,
                            "example": "Manhattan"
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100,
                            "example": "United States"
                          },
                          "postalCode": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 20
                          },
                          "dateOfBirth": {
                            "type": "string",
                            "nullable": true
                          },
                          "gender": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 50
                          },
                          "hobbiesAndPassions": {
                            "type": "string",
                            "nullable": true
                          },
                          "paidVoterMessage": {
                            "type": "string",
                            "nullable": true
                          },
                          "freeVoterMessage": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "lastFreeVoteAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "coverImageId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "userId",
                          "bio",
                          "avatarUrl",
                          "phone",
                          "address",
                          "city",
                          "country",
                          "postalCode",
                          "dateOfBirth",
                          "gender",
                          "hobbiesAndPassions",
                          "paidVoterMessage",
                          "freeVoterMessage",
                          "createdAt",
                          "updatedAt",
                          "lastFreeVoteAt",
                          "coverImageId"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Profile Create",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "description": "The Profile to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "bio": {
                    "type": "string",
                    "nullable": true
                  },
                  "avatarUrl": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 255
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 20,
                    "example": "+1 210 456 2719"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100,
                    "example": "Manhattan"
                  },
                  "country": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100,
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 20
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "nullable": true
                  },
                  "gender": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 50
                  },
                  "hobbiesAndPassions": {
                    "type": "string",
                    "nullable": true
                  },
                  "paidVoterMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "freeVoterMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "lastFreeVoteAt": {
                    "type": "string",
                    "nullable": true
                  },
                  "coverImageId": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "userId",
                  "bio",
                  "avatarUrl",
                  "phone",
                  "address",
                  "city",
                  "country",
                  "postalCode",
                  "dateOfBirth",
                  "gender",
                  "hobbiesAndPassions",
                  "paidVoterMessage",
                  "freeVoterMessage",
                  "lastFreeVoteAt",
                  "coverImageId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string",
                      "nullable": true
                    },
                    "avatarUrl": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20,
                      "example": "+1 210 456 2719"
                    },
                    "address": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "Manhattan"
                    },
                    "country": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "United States"
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "nullable": true
                    },
                    "gender": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 50
                    },
                    "hobbiesAndPassions": {
                      "type": "string",
                      "nullable": true
                    },
                    "paidVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "freeVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "lastFreeVoteAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "coverImageId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "bio",
                    "avatarUrl",
                    "phone",
                    "address",
                    "city",
                    "country",
                    "postalCode",
                    "dateOfBirth",
                    "gender",
                    "hobbiesAndPassions",
                    "paidVoterMessage",
                    "freeVoterMessage",
                    "createdAt",
                    "updatedAt",
                    "lastFreeVoteAt",
                    "coverImageId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "userId"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "bio"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "avatarUrl"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "phone"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "address"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "city"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "country"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "postalCode"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "date",
                            "received": "undefined",
                            "path": [
                              "dateOfBirth"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "gender"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "hobbiesAndPassions"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "paidVoterMessage"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "freeVoterMessage"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "date",
                            "received": "undefined",
                            "path": [
                              "lastFreeVoteAt"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "coverImageId"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile/{id}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Profile",
        "description": "Get a specific profile by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The profile ID"
            },
            "required": true,
            "description": "The profile ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string",
                      "nullable": true
                    },
                    "avatarUrl": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20,
                      "example": "+1 210 456 2719"
                    },
                    "address": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "Manhattan"
                    },
                    "country": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "United States"
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "nullable": true
                    },
                    "gender": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 50
                    },
                    "hobbiesAndPassions": {
                      "type": "string",
                      "nullable": true
                    },
                    "paidVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "freeVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "lastFreeVoteAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "coverImageId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "bio",
                    "avatarUrl",
                    "phone",
                    "address",
                    "city",
                    "country",
                    "postalCode",
                    "dateOfBirth",
                    "gender",
                    "hobbiesAndPassions",
                    "paidVoterMessage",
                    "freeVoterMessage",
                    "createdAt",
                    "updatedAt",
                    "lastFreeVoteAt",
                    "coverImageId"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Profile"
        ],
        "summary": "Update Profile",
        "description": "Update a specific profile by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The profile ID"
            },
            "required": true,
            "description": "The profile ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The profile data to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "bio": {
                    "type": "string",
                    "nullable": true
                  },
                  "avatarUrl": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 255
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 20,
                    "example": "+1 210 456 2719"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100,
                    "example": "Manhattan"
                  },
                  "country": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100,
                    "example": "United States"
                  },
                  "postalCode": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 20
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "nullable": true
                  },
                  "gender": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 50
                  },
                  "hobbiesAndPassions": {
                    "type": "string",
                    "nullable": true
                  },
                  "paidVoterMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "freeVoterMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "lastFreeVoteAt": {
                    "type": "string",
                    "nullable": true
                  },
                  "coverImageId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string",
                      "nullable": true
                    },
                    "avatarUrl": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20,
                      "example": "+1 210 456 2719"
                    },
                    "address": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "Manhattan"
                    },
                    "country": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100,
                      "example": "United States"
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 20
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "nullable": true
                    },
                    "gender": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 50
                    },
                    "hobbiesAndPassions": {
                      "type": "string",
                      "nullable": true
                    },
                    "paidVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "freeVoterMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "lastFreeVoteAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "coverImageId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "bio",
                    "avatarUrl",
                    "phone",
                    "address",
                    "city",
                    "country",
                    "postalCode",
                    "dateOfBirth",
                    "gender",
                    "hobbiesAndPassions",
                    "paidVoterMessage",
                    "freeVoterMessage",
                    "createdAt",
                    "updatedAt",
                    "lastFreeVoteAt",
                    "coverImageId"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Profile"
        ],
        "summary": "Delete Profile",
        "description": "Delete a specific profile by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The profile ID"
            },
            "required": true,
            "description": "The profile ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications": {
      "get": {
        "summary": "Get Notifications",
        "description": "Get paginated list of notifications for the authenticated user.",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "name": "isRead",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "name": "archived",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4
            },
            "required": true,
            "name": "userId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "profileId": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "isRead": {
                            "type": "boolean"
                          },
                          "archived": {
                            "type": "boolean"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "WARNING",
                              "SUCESS",
                              "INFO"
                            ]
                          },
                          "action": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "message",
                          "userId",
                          "profileId",
                          "createdAt",
                          "updatedAt",
                          "isRead",
                          "archived",
                          "icon",
                          "action"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "notifications",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notifications not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notifications not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Notification",
        "description": "Create a new notification.",
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "description": "The notification payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "icon": {
                    "type": "string",
                    "enum": [
                      "WARNING",
                      "SUCESS",
                      "INFO"
                    ]
                  },
                  "action": {
                    "type": "string"
                  }
                },
                "required": [
                  "message",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created notification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "isRead": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "icon": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "WARNING",
                        "SUCESS",
                        "INFO"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "message",
                    "userId",
                    "profileId",
                    "createdAt",
                    "updatedAt",
                    "isRead",
                    "archived",
                    "icon",
                    "action"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "message"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "userId"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/{id}": {
      "get": {
        "summary": "Get Notification",
        "description": "Get a specific notification by ID.",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The notification ID"
            },
            "required": true,
            "description": "The notification ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The notification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "isRead": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "icon": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "WARNING",
                        "SUCESS",
                        "INFO"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "message",
                    "userId",
                    "profileId",
                    "createdAt",
                    "updatedAt",
                    "isRead",
                    "archived",
                    "icon",
                    "action"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notification not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Notification",
        "description": "Update a notification by ID.",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The notification ID"
            },
            "required": true,
            "description": "The notification ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The notification update payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "isRead": {
                    "type": "boolean",
                    "default": false
                  },
                  "archived": {
                    "type": "boolean",
                    "default": false
                  },
                  "icon": {
                    "type": "string",
                    "nullable": true,
                    "enum": [
                      "WARNING",
                      "SUCESS",
                      "INFO"
                    ]
                  },
                  "action": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated notification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "isRead": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "icon": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "WARNING",
                        "SUCESS",
                        "INFO"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "message",
                    "userId",
                    "profileId",
                    "createdAt",
                    "updatedAt",
                    "isRead",
                    "archived",
                    "icon",
                    "action"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notification not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Notification",
        "description": "Delete a notification by ID.",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The notification ID"
            },
            "required": true,
            "description": "The notification ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted notification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "isRead": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "icon": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "WARNING",
                        "SUCESS",
                        "INFO"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "message",
                    "userId",
                    "profileId",
                    "createdAt",
                    "updatedAt",
                    "isRead",
                    "archived",
                    "icon",
                    "action"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notification not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/{id}/read": {
      "patch": {
        "summary": "Mark Notification as Read",
        "description": "Mark a notification as read.",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The notification ID"
            },
            "required": true,
            "description": "The notification ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated notification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "isRead": {
                      "type": "boolean"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "icon": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "WARNING",
                        "SUCESS",
                        "INFO"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "message",
                    "userId",
                    "profileId",
                    "createdAt",
                    "updatedAt",
                    "isRead",
                    "archived",
                    "icon",
                    "action"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notification not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/{userId}/read-all": {
      "patch": {
        "summary": "Mark All Notifications as Read",
        "description": "Mark all notifications as read for the authenticated user.",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The User ID"
            },
            "required": true,
            "description": "The User ID",
            "name": "userId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response with count of updated notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "updatedCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "message",
                    "updatedCount"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest": {
      "get": {
        "tags": [
          "Contest"
        ],
        "summary": "Contest Lists",
        "description": "Get a list of all contest",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The contest lists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 3,
                            "example": "Big Weekend"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "startDate": {
                            "type": "string"
                          },
                          "prizePool": {
                            "type": "number"
                          },
                          "endDate": {
                            "type": "string"
                          },
                          "winnerProfileId": {
                            "type": "string",
                            "nullable": true
                          },
                          "awards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "Best Performance"
                                },
                                "icon": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "🏆"
                                },
                                "contestId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "icon",
                                "contestId"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "startDate",
                          "prizePool",
                          "endDate",
                          "winnerProfileId",
                          "awards"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Contest Create",
        "tags": [
          "Contest"
        ],
        "requestBody": {
          "description": "The Contest to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "example": "Big Weekend"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "nullable": true
                  },
                  "prizePool": {
                    "type": "number"
                  },
                  "endDate": {
                    "type": "string",
                    "nullable": true
                  },
                  "awards": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Best Performance"
                        },
                        "icon": {
                          "type": "string",
                          "minLength": 1,
                          "example": "🏆"
                        }
                      },
                      "required": [
                        "name",
                        "icon"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "description",
                  "prizePool",
                  "awards"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created contest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 3,
                      "example": "Big Weekend"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "prizePool": {
                      "type": "number"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "winnerProfileId": {
                      "type": "string",
                      "nullable": true
                    },
                    "awards": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Best Performance"
                          },
                          "icon": {
                            "type": "string",
                            "minLength": 1,
                            "example": "🏆"
                          },
                          "contestId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "icon",
                          "contestId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "startDate",
                    "prizePool",
                    "endDate",
                    "winnerProfileId",
                    "awards"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "name"
                            ],
                            "message": "contest name is required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "description"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "number",
                            "received": "undefined",
                            "path": [
                              "prizePool"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{id}": {
      "get": {
        "tags": [
          "Contest"
        ],
        "summary": "Get Contest",
        "description": "Get a specific contest by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The contest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 3,
                      "example": "Big Weekend"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "prizePool": {
                      "type": "number"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "winnerProfileId": {
                      "type": "string",
                      "nullable": true
                    },
                    "awards": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Best Performance"
                          },
                          "icon": {
                            "type": "string",
                            "minLength": 1,
                            "example": "🏆"
                          },
                          "contestId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "icon",
                          "contestId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "startDate",
                    "prizePool",
                    "endDate",
                    "winnerProfileId",
                    "awards"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contest"
        ],
        "summary": "Update Contest",
        "description": "Update a specific contest by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The contest data to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "example": "Big Weekend"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "nullable": true
                  },
                  "prizePool": {
                    "type": "number"
                  },
                  "endDate": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated contest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 3,
                      "example": "Big Weekend"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "prizePool": {
                      "type": "number"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "winnerProfileId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "startDate",
                    "prizePool",
                    "endDate",
                    "winnerProfileId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contest"
        ],
        "summary": "Delete Contest",
        "description": "Delete a specific contest by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Contest deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/upcoming": {
      "get": {
        "tags": [
          "Contest"
        ],
        "summary": "Get Upcoming Contests",
        "description": "Get all upcoming contests",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The upcoming contests list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 3,
                            "example": "Big Weekend"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "startDate": {
                            "type": "string"
                          },
                          "prizePool": {
                            "type": "number"
                          },
                          "endDate": {
                            "type": "string"
                          },
                          "winnerProfileId": {
                            "type": "string",
                            "nullable": true
                          },
                          "awards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "Best Performance"
                                },
                                "icon": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "🏆"
                                },
                                "contestId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "icon",
                                "contestId"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "startDate",
                          "prizePool",
                          "endDate",
                          "winnerProfileId",
                          "awards"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{userId}/available": {
      "get": {
        "tags": [
          "Contest"
        ],
        "summary": "Get Available Contests",
        "description": "Get contests that the user hasn't joined and are available",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The User ID"
            },
            "required": true,
            "description": "The User ID",
            "name": "userId",
            "in": "path"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The available contests list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 3,
                            "example": "Big Weekend"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "startDate": {
                            "type": "string"
                          },
                          "prizePool": {
                            "type": "number"
                          },
                          "endDate": {
                            "type": "string"
                          },
                          "winnerProfileId": {
                            "type": "string",
                            "nullable": true
                          },
                          "awards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "Best Performance"
                                },
                                "icon": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "🏆"
                                },
                                "contestId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "icon",
                                "contestId"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "startDate",
                          "prizePool",
                          "endDate",
                          "winnerProfileId",
                          "awards"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{userId}/joined": {
      "get": {
        "tags": [
          "Contest"
        ],
        "summary": "Get Joined Contests",
        "description": "Get contests that the user has joined",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The User ID"
            },
            "required": true,
            "description": "The User ID",
            "name": "userId",
            "in": "path"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The joined contests list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 3,
                            "example": "Big Weekend"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "startDate": {
                            "type": "string"
                          },
                          "prizePool": {
                            "type": "number"
                          },
                          "endDate": {
                            "type": "string"
                          },
                          "winnerProfileId": {
                            "type": "string",
                            "nullable": true
                          },
                          "awards": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "Best Performance"
                                },
                                "icon": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "🏆"
                                },
                                "contestId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "icon",
                                "contestId"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "startDate",
                          "prizePool",
                          "endDate",
                          "winnerProfileId",
                          "awards"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{id}/stats": {
      "get": {
        "tags": [
          "Contest"
        ],
        "summary": "Get Contest Stats",
        "description": "Get statistics for a specific contest",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The contest statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contestId": {
                      "type": "string"
                    },
                    "contestName": {
                      "type": "string"
                    },
                    "totalParticipants": {
                      "type": "number"
                    },
                    "totalVotes": {
                      "type": "number"
                    },
                    "freeVotes": {
                      "type": "number"
                    },
                    "paidVotes": {
                      "type": "number"
                    },
                    "totalPrizePool": {
                      "type": "number"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "daysRemaining": {
                      "type": "number"
                    },
                    "participationRate": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "contestId",
                    "contestName",
                    "totalParticipants",
                    "totalVotes",
                    "freeVotes",
                    "paidVotes",
                    "totalPrizePool",
                    "startDate",
                    "endDate",
                    "isActive",
                    "participationRate"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Contest not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contest not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{id}/leaderboard": {
      "get": {
        "tags": [
          "Contest"
        ],
        "summary": "Get Contest Leaderboard",
        "description": "Get leaderboard for a specific contest",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The contest leaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rank": {
                            "type": "number"
                          },
                          "profileId": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          },
                          "displayUsername": {
                            "type": "string",
                            "nullable": true
                          },
                          "avatarUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "bio": {
                            "type": "string",
                            "nullable": true
                          },
                          "totalVotes": {
                            "type": "number"
                          },
                          "freeVotes": {
                            "type": "number"
                          },
                          "paidVotes": {
                            "type": "number"
                          },
                          "isParticipating": {
                            "type": "boolean"
                          },
                          "coverImage": {
                            "type": "string",
                            "nullable": true
                          },
                          "isApproved": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "rank",
                          "profileId",
                          "userId",
                          "username",
                          "displayUsername",
                          "avatarUrl",
                          "bio",
                          "totalVotes",
                          "freeVotes",
                          "paidVotes",
                          "isParticipating",
                          "coverImage",
                          "isApproved"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Contest not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contest not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{contestId}/awards": {
      "post": {
        "tags": [
          "Award"
        ],
        "summary": "Create Contest Awards",
        "description": "Create awards for a specific contest",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "contestId",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The awards to create for the contest",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "example": "Best Performance"
                    },
                    "icon": {
                      "type": "string",
                      "minLength": 1,
                      "example": "🏆"
                    }
                  },
                  "required": [
                    "name",
                    "icon"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created awards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Best Performance"
                      },
                      "icon": {
                        "type": "string",
                        "minLength": 1,
                        "example": "🏆"
                      },
                      "contestId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "icon",
                      "contestId"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Award"
        ],
        "summary": "Get Contest Awards",
        "description": "Get all awards for a specific contest",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "contestId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The contest awards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Best Performance"
                      },
                      "icon": {
                        "type": "string",
                        "minLength": 1,
                        "example": "🏆"
                      },
                      "contestId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "icon",
                      "contestId"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/awards/{id}": {
      "get": {
        "tags": [
          "Award"
        ],
        "summary": "Get Award",
        "description": "Get a specific award by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The award ID"
            },
            "required": true,
            "description": "The award ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The award",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "example": "Best Performance"
                    },
                    "icon": {
                      "type": "string",
                      "minLength": 1,
                      "example": "🏆"
                    },
                    "contestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "icon",
                    "contestId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Award"
        ],
        "summary": "Update Award",
        "description": "Update a specific award by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The award ID"
            },
            "required": true,
            "description": "The award ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The award data to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Best Performance"
                  },
                  "icon": {
                    "type": "string",
                    "minLength": 1,
                    "example": "🏆"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated award",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "example": "Best Performance"
                    },
                    "icon": {
                      "type": "string",
                      "minLength": 1,
                      "example": "🏆"
                    },
                    "contestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "icon",
                    "contestId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Award"
        ],
        "summary": "Delete Award",
        "description": "Delete a specific award by ID",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The award ID"
            },
            "required": true,
            "description": "The award ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Award deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/join": {
      "post": {
        "summary": "Join Contest",
        "description": "Join a user (profile) to a contest.",
        "tags": [
          "Contest Participation"
        ],
        "requestBody": {
          "description": "The join contest payload (profileId, contestId, coverImage)",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contestId": {
                    "type": "string"
                  },
                  "coverImage": {
                    "type": "string",
                    "nullable": true
                  },
                  "isParticipating": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "contestId",
                  "coverImage",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created contest participation record with contest details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string"
                    },
                    "contestId": {
                      "type": "string"
                    },
                    "coverImage": {
                      "type": "string",
                      "nullable": true
                    },
                    "isApproved": {
                      "type": "boolean",
                      "example": false
                    },
                    "isParticipating": {
                      "type": "boolean",
                      "nullable": true,
                      "example": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "contest": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 3,
                          "example": "Big Weekend"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "prizePool": {
                          "type": "number"
                        },
                        "endDate": {
                          "type": "string"
                        },
                        "winnerProfileId": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "createdAt",
                        "updatedAt",
                        "startDate",
                        "prizePool",
                        "endDate",
                        "winnerProfileId"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "profileId",
                    "contestId",
                    "coverImage",
                    "isApproved",
                    "isParticipating",
                    "createdAt",
                    "updatedAt",
                    "contest"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Participant already joined the contest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Participant already joined the contest"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Conflict"
                    },
                    "status": {
                      "type": "number",
                      "example": 409
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "contestId"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "coverImage"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "userId"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/leave": {
      "post": {
        "summary": "Leave Contest",
        "description": "Leave a contest by removing the participation record.",
        "tags": [
          "Contest Participation"
        ],
        "requestBody": {
          "description": "The leave contest payload (profileId, contestId)",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "contestId": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "contestId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The deleted contest participation record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string"
                    },
                    "contestId": {
                      "type": "string"
                    },
                    "coverImage": {
                      "type": "string",
                      "nullable": true
                    },
                    "isApproved": {
                      "type": "boolean",
                      "example": false
                    },
                    "isParticipating": {
                      "type": "boolean",
                      "nullable": true,
                      "example": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "profileId",
                    "contestId",
                    "coverImage",
                    "isApproved",
                    "isParticipating",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Contest participation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contest participation not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "contestId"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "coverImage"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "userId"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{contestId}/participants": {
      "get": {
        "tags": [
          "Contest Participation"
        ],
        "summary": "Get Contest Participants",
        "description": "Get all participants of a specific contest",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "contestId",
            "in": "path"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The contest participants list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "coverImage": {
                            "type": "string",
                            "nullable": true
                          },
                          "isApproved": {
                            "type": "boolean",
                            "example": false
                          },
                          "isParticipating": {
                            "type": "boolean",
                            "nullable": true,
                            "example": true
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "profile": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "bio": {
                                "type": "string",
                                "nullable": true
                              },
                              "freeVoterMessage": {
                                "type": "string",
                                "nullable": true
                              },
                              "hobbiesAndPassions": {
                                "type": "string",
                                "nullable": true
                              },
                              "paidVoterMessage": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "bio",
                              "freeVoterMessage",
                              "hobbiesAndPassions",
                              "paidVoterMessage"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "coverImage",
                          "isApproved",
                          "isParticipating",
                          "createdAt",
                          "updatedAt",
                          "profile"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Contest not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contest not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/{id}/winner": {
      "get": {
        "tags": [
          "Contest Participation"
        ],
        "summary": "Get Contest Winner",
        "description": "Get the winner of a specific contest",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The contest winner information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "winner": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "bio": {
                          "type": "string",
                          "nullable": true
                        },
                        "avatarUrl": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 255
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 20,
                          "example": "+1 210 456 2719"
                        },
                        "address": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 100,
                          "example": "Manhattan"
                        },
                        "country": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 100,
                          "example": "United States"
                        },
                        "postalCode": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 20
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "nullable": true
                        },
                        "gender": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 50
                        },
                        "hobbiesAndPassions": {
                          "type": "string",
                          "nullable": true
                        },
                        "paidVoterMessage": {
                          "type": "string",
                          "nullable": true
                        },
                        "freeVoterMessage": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "lastFreeVoteAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "coverImageId": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "userId",
                        "bio",
                        "avatarUrl",
                        "phone",
                        "address",
                        "city",
                        "country",
                        "postalCode",
                        "dateOfBirth",
                        "gender",
                        "hobbiesAndPassions",
                        "paidVoterMessage",
                        "freeVoterMessage",
                        "createdAt",
                        "updatedAt",
                        "lastFreeVoteAt",
                        "coverImageId"
                      ]
                    },
                    "totalParticipants": {
                      "type": "number"
                    },
                    "totalVotes": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "winner",
                    "totalParticipants",
                    "totalVotes"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Contest not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contest not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contest Participation"
        ],
        "summary": "Set Contest Winner",
        "description": "Set the winner of a specific contest",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The contest ID"
            },
            "required": true,
            "description": "The contest ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The winner profile ID",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "winnerProfileId": {
                    "type": "string",
                    "description": "The Profile ID of the winner"
                  }
                },
                "required": [
                  "winnerProfileId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The contest winner information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contest": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 3,
                          "example": "Big Weekend"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "prizePool": {
                          "type": "number"
                        },
                        "endDate": {
                          "type": "string"
                        },
                        "winnerProfileId": {
                          "type": "string",
                          "nullable": true
                        },
                        "awards": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Best Performance"
                              },
                              "icon": {
                                "type": "string",
                                "minLength": 1,
                                "example": "🏆"
                              },
                              "contestId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "icon",
                              "contestId"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "createdAt",
                        "updatedAt",
                        "startDate",
                        "prizePool",
                        "endDate",
                        "winnerProfileId",
                        "awards"
                      ]
                    },
                    "winner": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "bio": {
                          "type": "string",
                          "nullable": true
                        },
                        "avatarUrl": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 255
                        },
                        "phone": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 20,
                          "example": "+1 210 456 2719"
                        },
                        "address": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 100,
                          "example": "Manhattan"
                        },
                        "country": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 100,
                          "example": "United States"
                        },
                        "postalCode": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 20
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "nullable": true
                        },
                        "gender": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 50
                        },
                        "hobbiesAndPassions": {
                          "type": "string",
                          "nullable": true
                        },
                        "paidVoterMessage": {
                          "type": "string",
                          "nullable": true
                        },
                        "freeVoterMessage": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "lastFreeVoteAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "coverImageId": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "userId",
                        "bio",
                        "avatarUrl",
                        "phone",
                        "address",
                        "city",
                        "country",
                        "postalCode",
                        "dateOfBirth",
                        "gender",
                        "hobbiesAndPassions",
                        "paidVoterMessage",
                        "freeVoterMessage",
                        "createdAt",
                        "updatedAt",
                        "lastFreeVoteAt",
                        "coverImageId"
                      ]
                    },
                    "totalParticipants": {
                      "type": "number"
                    },
                    "totalVotes": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "contest",
                    "winner",
                    "totalParticipants",
                    "totalVotes"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Contest not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contest not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "winnerProfileId"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contest/vote": {
      "post": {
        "summary": "Vote a profile in a contest",
        "description": "Vote for a profile in a contest. Supports free and paid votes. Free votes are limited to one per 24 hours per contest.",
        "tags": [
          "Vote"
        ],
        "requestBody": {
          "description": "The vote payload (voterId, voteeId, contestId, type)",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voterId": {
                    "type": "string",
                    "format": "cuid"
                  },
                  "voteeId": {
                    "type": "string",
                    "format": "cuid"
                  },
                  "contestId": {
                    "type": "string",
                    "format": "cuid"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "FREE",
                      "PAID"
                    ],
                    "default": "FREE"
                  }
                },
                "required": [
                  "voterId",
                  "voteeId",
                  "contestId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created vote record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voterId": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "voteeId": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "contestId": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "FREE",
                        "PAID"
                      ],
                      "default": "FREE"
                    },
                    "id": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "voterId",
                    "voteeId",
                    "contestId",
                    "id",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "voterId"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "voteeId"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "contestId"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/votes/is-free-vote-available": {
      "post": {
        "summary": "Check free vote status",
        "description": "Returns whether a free vote is available for the given profileId, and if not, when it will be available.",
        "tags": [
          "Vote"
        ],
        "requestBody": {
          "description": "The profile ID to check free vote availability for",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profileId": {
                    "type": "string",
                    "description": "The profile ID to check free vote availability for"
                  }
                },
                "required": [
                  "profileId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Whether a free vote is available and the next available time if not.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available": {
                      "type": "boolean"
                    },
                    "nextAvailableAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "available"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Profile not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile not found."
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Missing or invalid profileId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/votes/latest-votes": {
      "get": {
        "summary": "Get latest votes",
        "description": "Get a list of latest votes",
        "tags": [
          "Vote"
        ],
        "responses": {
          "200": {
            "description": "The latest votes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "profileId": {
                        "type": "string",
                        "format": "cuid"
                      },
                      "createdAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "profileId",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/votes/{userId}": {
      "get": {
        "tags": [
          "Vote"
        ],
        "summary": "Get votes by user id",
        "description": "Get votes for a user by user id",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "userId",
            "in": "path"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Votes fetched for the user successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "userName": {
                            "type": "string"
                          },
                          "contestName": {
                            "type": "string"
                          },
                          "votedOn": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId",
                          "userName",
                          "contestName",
                          "votedOn"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vote-multiplier-periods": {
      "post": {
        "tags": [
          "Vote Multiplier Periods"
        ],
        "summary": "Create a new vote multiplier period",
        "description": "Create a new vote multiplier period for paid votes",
        "requestBody": {
          "description": "The Vote Multiplier to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "multiplierTimes": {
                    "type": "number"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "startTime": {
                    "type": "string",
                    "example": "2025-08-02T12:34:56.000Z"
                  },
                  "endTime": {
                    "type": "string",
                    "example": "2025-08-02T12:34:56.000Z"
                  }
                },
                "required": [
                  "multiplierTimes",
                  "isActive",
                  "startTime",
                  "endTime"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created vote multiplier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "multiplierTimes": {
                      "type": "number"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "multiplierTimes",
                    "isActive",
                    "startTime",
                    "endTime",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Something Went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something Went wrong"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "status": {
                      "type": "number",
                      "example": 400
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Vote multiplier period already exists for this time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vote multiplier period already exists for this time range"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Conflict"
                    },
                    "status": {
                      "type": "number",
                      "example": 409
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Vote Multiplier Periods"
        ],
        "summary": "Get all vote multiplier periods",
        "description": "Retrieve all vote multiplier periods with pagination",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The vote multiplier lists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "multiplierTimes": {
                            "type": "number"
                          },
                          "isActive": {
                            "type": "boolean"
                          },
                          "startTime": {
                            "type": "string",
                            "example": "2025-08-02T12:34:56.000Z"
                          },
                          "endTime": {
                            "type": "string",
                            "example": "2025-08-02T12:34:56.000Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2025-08-02T12:34:56.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2025-08-02T12:34:56.000Z"
                          }
                        },
                        "required": [
                          "id",
                          "multiplierTimes",
                          "isActive",
                          "startTime",
                          "endTime",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "already has active vote multplier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "already has active vote multplier"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Conflict"
                    },
                    "status": {
                      "type": "number",
                      "example": 409
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vote-multiplier-periods/active": {
      "get": {
        "tags": [
          "Vote Multiplier Periods"
        ],
        "summary": "Get active vote multiplier period",
        "description": "Get the currently active vote multiplier period",
        "responses": {
          "200": {
            "description": "Active vote multiplier period retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "multiplierTimes": {
                      "type": "number"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "multiplierTimes",
                    "isActive",
                    "startTime",
                    "endTime",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vote-multiplier-periods/{id}": {
      "put": {
        "tags": [
          "Vote Multiplier Periods"
        ],
        "summary": "Update a vote multiplier period",
        "description": "Update an existing vote multiplier period",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The Vote Multiplier to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "multiplierTimes": {
                    "type": "number"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "startTime": {
                    "type": "string",
                    "example": "2025-08-02T12:34:56.000Z"
                  },
                  "endTime": {
                    "type": "string",
                    "example": "2025-08-02T12:34:56.000Z"
                  }
                },
                "required": [
                  "multiplierTimes",
                  "isActive",
                  "startTime",
                  "endTime"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created vote multiplier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "multiplierTimes": {
                      "type": "number"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "startTime": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "endTime": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-08-02T12:34:56.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "multiplierTimes",
                    "isActive",
                    "startTime",
                    "endTime",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "End time must be after start time",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "End time must be after start time"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "status": {
                      "type": "number",
                      "example": 400
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Vote multiplier not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vote multiplier not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "A vote multiplier period already existss",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "A vote multiplier period already existss"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Conflict"
                    },
                    "status": {
                      "type": "number",
                      "example": 409
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vote Multiplier Periods"
        ],
        "summary": "Delete a vote multiplier period",
        "description": "Delete an existing vote multiplier period",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Vote multiplier deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Vote multiplier not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vote multiplier not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ranks": {
      "get": {
        "tags": [
          "Rank"
        ],
        "summary": "Rank List",
        "decscription": "",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 2
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The rank list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "votesRecieved": {
                        "type": "number",
                        "nullable": true
                      },
                      "profileId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "votesRecieved",
                      "profileId"
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/vote/pay": {
      "post": {
        "tags": [
          "Payments",
          "Vote"
        ],
        "summary": "Paid Votes for Contest",
        "description": "",
        "requestBody": {
          "description": "The validation error",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voteeId": {
                    "type": "string"
                  },
                  "voterId": {
                    "type": "string"
                  },
                  "contestId": {
                    "type": "string"
                  },
                  "voteCount": {
                    "type": "string"
                  }
                },
                "required": [
                  "voteeId",
                  "voterId",
                  "contestId",
                  "voteCount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment made successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Service Unavailable"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Service Unavailable"
                    },
                    "status": {
                      "type": "number",
                      "example": 503
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{userId}/history": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get user payment history",
        "description": "Retrieve paginated payment history for a specific user",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "User ID to get payment history for"
            },
            "required": true,
            "name": "userId",
            "in": "path"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "PENDING",
                              "COMPLETED",
                              "FAILED"
                            ]
                          },
                          "stripeSessionId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "payer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "user"
                            ]
                          },
                          "votes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "FREE",
                                    "PAID"
                                  ]
                                },
                                "contest": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                },
                                "votee": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "user"
                                  ]
                                },
                                "createdAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "type",
                                "contest",
                                "votee",
                                "createdAt"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "amount",
                          "status",
                          "stripeSessionId",
                          "createdAt",
                          "updatedAt",
                          "payer",
                          "votes"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Insufficient permissions"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "status": {
                      "type": "number",
                      "example": 403
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "status": {
                      "type": "number",
                      "example": 404
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get all payments (Admin only)",
        "description": "Retrieve paginated list of all payments in the system",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All payments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "PENDING",
                              "COMPLETED",
                              "FAILED"
                            ]
                          },
                          "stripeSessionId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "payer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "user"
                            ]
                          },
                          "votes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "FREE",
                                    "PAID"
                                  ]
                                },
                                "contest": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name"
                                  ]
                                },
                                "votee": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "user"
                                  ]
                                },
                                "createdAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "type",
                                "contest",
                                "votee",
                                "createdAt"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "amount",
                          "status",
                          "stripeSessionId",
                          "createdAt",
                          "updatedAt",
                          "payer",
                          "votes"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication required"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "status": {
                      "type": "number",
                      "example": 401
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Insufficient permissions"
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Forbidden"
                    },
                    "status": {
                      "type": "number",
                      "example": 403
                    }
                  },
                  "required": [
                    "message",
                    "statusText",
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leaderboard": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "summary": "Get Leaderboard",
        "description": "Get the leaderboard of model profiles ranked by total votes received",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The leaderboard data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rank": {
                            "type": "number",
                            "example": 1
                          },
                          "profileId": {
                            "type": "string",
                            "example": "clx1234567890abcdef"
                          },
                          "userId": {
                            "type": "string",
                            "example": "clx1234567890abcdef"
                          },
                          "username": {
                            "type": "string",
                            "example": "john_doe"
                          },
                          "displayUsername": {
                            "type": "string",
                            "nullable": true,
                            "example": "John Doe"
                          },
                          "avatarUrl": {
                            "type": "string",
                            "nullable": true,
                            "example": "https://example.com/avatar.jpg"
                          },
                          "bio": {
                            "type": "string",
                            "nullable": true,
                            "example": "Model and influencer"
                          },
                          "totalVotes": {
                            "type": "number",
                            "example": 150
                          },
                          "freeVotes": {
                            "type": "number",
                            "example": 100
                          },
                          "paidVotes": {
                            "type": "number",
                            "example": 50
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2024-01-01T00:00:00Z"
                          }
                        },
                        "required": [
                          "rank",
                          "profileId",
                          "userId",
                          "username",
                          "displayUsername",
                          "avatarUrl",
                          "bio",
                          "totalVotes",
                          "freeVotes",
                          "paidVotes",
                          "createdAt"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "nextPage": {
                          "type": "number",
                          "nullable": true,
                          "example": 2
                        },
                        "previousPage": {
                          "type": "number",
                          "nullable": true,
                          "example": null
                        }
                      },
                      "required": [
                        "total",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage",
                        "nextPage",
                        "previousPage"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "pagination"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/media/profile/{profileId}/upload": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Upload Media File",
        "description": "Upload a media file using multipart/form-data.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "profileId",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "mediaType": {
                    "type": "string",
                    "nullable": true,
                    "enum": [
                      "USER_IMAGE",
                      "PROFILE_IMAGE",
                      "PROFILE_COVER_IMAGE",
                      "PROFILE_AVATAR",
                      "VOTING_IMAGE",
                      "COVER_IMAGE",
                      "CONTEST_IMAGE"
                    ]
                  },
                  "profileId": {
                    "type": "string",
                    "nullable": true
                  },
                  "file": {
                    "description": "The file to upload"
                  }
                },
                "required": [
                  "mediaType",
                  "profileId",
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The uploaded media metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "originalFileName": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "FAILED",
                        "PROCESSING",
                        "COMPLETED"
                      ]
                    },
                    "mediaType": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "USER_IMAGE",
                        "PROFILE_IMAGE",
                        "PROFILE_COVER_IMAGE",
                        "PROFILE_AVATAR",
                        "VOTING_IMAGE",
                        "COVER_IMAGE",
                        "CONTEST_IMAGE"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "key",
                    "name",
                    "url",
                    "size",
                    "type",
                    "originalFileName",
                    "status",
                    "mediaType",
                    "createdAt",
                    "updatedAt",
                    "profileId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Upload failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}